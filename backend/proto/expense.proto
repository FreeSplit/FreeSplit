syntax = "proto3";

package freesplit;

option go_package = "freesplit/proto";

import "google/protobuf/empty.proto";

// Expense service
service ExpenseService {
  rpc GetExpensesByGroup(GetExpensesByGroupRequest) returns (GetExpensesByGroupResponse);
  rpc GetSplitsByParticipant(GetSplitsByParticipantRequest) returns (GetSplitsByParticipantResponse);
  rpc GetExpenseWithSplits(GetExpenseWithSplitsRequest) returns (GetExpenseWithSplitsResponse);
  rpc CreateExpense(CreateExpenseRequest) returns (CreateExpenseResponse);
  rpc UpdateExpense(UpdateExpenseRequest) returns (UpdateExpenseResponse);
  rpc DeleteExpense(DeleteExpenseRequest) returns (google.protobuf.Empty);
}

// Group service
service GroupService {
  rpc GetGroup(GetGroupRequest) returns (GetGroupResponse);
  rpc CreateGroup(CreateGroupRequest) returns (CreateGroupResponse);
  rpc UpdateGroup(UpdateGroupRequest) returns (UpdateGroupResponse);
}

// Participant service
service ParticipantService {
  rpc AddParticipant(AddParticipantRequest) returns (AddParticipantResponse);
  rpc UpdateParticipant(UpdateParticipantRequest) returns (UpdateParticipantResponse);
  rpc DeleteParticipant(DeleteParticipantRequest) returns (google.protobuf.Empty);
}

// Debt service
service DebtService {
  rpc GetDebts(GetDebtsRequest) returns (GetDebtsResponse);
  rpc UpdateDebtPaidAmount(UpdateDebtPaidAmountRequest) returns (UpdateDebtPaidAmountResponse);
}

// Data structures
message Group {
  int32 id = 1;
  string url_slug = 2;
  string name = 3;
  int64 settle_up_date = 4;
  string state = 5;
  string currency = 6;
  repeated int32 participant_ids = 7;
  repeated int32 expense_ids = 8;
}

message Participant {
  int32 id = 1;
  string name = 2;
  int32 group_id = 3;
}

message Expense {
  int32 id = 1;
  string name = 2;
  double cost = 3;
  string emoji = 4;
  int32 payer_id = 5;
  string split_type = 6;
  repeated int32 split_ids = 7;
  int32 group_id = 8;
}

message Split {
  int32 split_id = 1;
  int32 group_id = 2;
  int32 expense_id = 3;
  int32 participant_id = 4;
  double split_amount = 5;
}

message Debt {
  int32 debt_id = 1;
  int32 group_id = 2;
  int32 lender_id = 3;
  int32 debtor_id = 4;
  double debt_amount = 5;
  double paid_amount = 6;
}

// Request/Response messages
message GetExpensesByGroupRequest {
  int32 group_id = 1;
}

message GetExpensesByGroupResponse {
  repeated Expense expenses = 1;
}

message GetSplitsByParticipantRequest {
  int32 participant_id = 1;
}

message GetSplitsByParticipantResponse {
  repeated Split splits = 1;
}

message GetExpenseWithSplitsRequest {
  int32 expense_id = 1;
}

message GetExpenseWithSplitsResponse {
  Expense expense = 1;
  repeated Split splits = 2;
}

message CreateExpenseRequest {
  Expense expense = 1;
  repeated Split splits = 2;
}

message CreateExpenseResponse {
  Expense expense = 1;
  repeated Split splits = 2;
}

message UpdateExpenseRequest {
  Expense expense = 1;
  repeated Split splits = 2;
  int32 participant_id = 3;
}

message UpdateExpenseResponse {
  Expense expense = 1;
  repeated Split splits = 2;
}

message DeleteExpenseRequest {
  int32 expense_id = 1;
  repeated Split splits = 2;
}

message GetGroupRequest {
  string url_slug = 1;
}

message GetGroupResponse {
  Group group = 1;
  repeated Participant participants = 2;
}

message CreateGroupRequest {
  string name = 1;
  string currency = 2;
  repeated string participant_names = 3;
}

message CreateGroupResponse {
  Group group = 1;
  repeated Participant participants = 2;
}

message UpdateGroupRequest {
  string url_slug = 1;
  string name = 2;
  string currency = 3;
  int32 participant_id = 4;
}

message UpdateGroupResponse {
  Group group = 1;
}

message AddParticipantRequest {
  string name = 1;
  int32 group_id = 2;
}

message AddParticipantResponse {
  Participant participant = 1;
}

message UpdateParticipantRequest {
  string name = 1;
  int32 participant_id = 2;
}

message UpdateParticipantResponse {
  Participant participant = 1;
}

message DeleteParticipantRequest {
  int32 participant_id = 1;
}

message GetDebtsRequest {
  int32 group_id = 1;
}

message GetDebtsResponse {
  repeated Debt debts = 1;
  repeated Participant participants = 2;
}

message UpdateDebtPaidAmountRequest {
  int32 debt_id = 1;
  double paid_amount = 2;
}

message UpdateDebtPaidAmountResponse {
  Debt debt = 1;
}

